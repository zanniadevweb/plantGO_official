<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.test_libgdxintoandroid"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="24"
        android:targetSdkVersion="30" />
    <!-- __________________ Permissions propres à l'appareil photo __________________ -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- __________________ Permissions propres à Google Maps __________________ -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- __________________ Permissions propres à Firebase __________________ -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Although the *SdkVersion is captured in gradle build files, this is required for non gradle builds -->
    <!-- <uses-sdk android:minSdkVersion="14"/> -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <application
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:extractNativeLibs="false"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/AppTheme" >

        <!--
          The API key for Google Maps-based APIs is defined as a string resource.
          (See the file "res/values/google_maps_api.xml").
          Note that the API key is linked to the encryption key used to sign the APK.
          You need a different API key for each encryption key, including the release key that is used to
          sign the APK for publishing.
          You can define the keys for the debug and release targets in src/debug/ and src/release/.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="res/values/google_maps_api.xml" />

        <activity
            android:name="com.example.test_libgdxintoandroid.MainActivity"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.test_libgdxintoandroid.AndroidLauncherRandom"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="landscape" />
        <activity
            android:name="com.example.test_libgdxintoandroid.ConsignesDeJeu"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.AppPhotoActivity"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.ProfilActivity"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.Inventaire"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.Personnage"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.JeuCoffreTresor"
            android:configChanges="orientation"
            android:label="@string/app_name"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.APIActivity"
            android:configChanges="orientation"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.cartePlanteActivity"
            android:configChanges="orientation"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.HerbierActivity"
            android:configChanges="orientation"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.test_libgdxintoandroid.SauvegardeActivity"
            android:configChanges="orientation"
            android:screenOrientation="portrait" />

        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:directBootAware="true"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.storage.StorageRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <!--
                This registrar is not defined in the dynamic-module-support sdk itself to allow non-firebase
                clients to use it as well, by defining this registrar in their own core/common library.
            -->
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.dynamicloading.DynamicLoadingRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service> <!-- Needs to be explicitly declared on P+ -->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.example.test_libgdxintoandroid.firebaseinitprovider"
            android:directBootAware="true"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <provider
            android:name="androidx.lifecycle.ProcessLifecycleOwnerInitializer"
            android:authorities="com.example.test_libgdxintoandroid.lifecycle-process"
            android:exported="false"
            android:multiprocess="true" />
    </application>

</manifest>